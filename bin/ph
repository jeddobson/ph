#!/usr/bin/env python
"""ph: Dartmouth Name Directory (DND) search tool
"""
# James E. Dobson (James.E.Dobson@Dartmouth.EDU)
# Originally written for Python 2.x in 2009 or so
#

import ldap, ldap.modlist
import sys

# Dartmouth LDAP server
ldap_server = "ldap://oud.dartmouth.edu"
baseDN = "dc=dartmouth,dc=edu"

# LDAP search variables
retrieveAttributes = None
searchScope = ldap.SCOPE_SUBTREE

# verbose flag
verbose = False



if len(sys.argv) < 2:
  print("Dartmouth Directory Search (ph)")
  print("usage: ph searchstring")
  sys.exit()

if sys.argv[1] == '-help':
  print("Dartmouth Directory Search (ph)")
  print("usage: ph [ -v ] 'First*Last Name'")
  sys.exit()

# get argument and add to "cn" to make search filter
searchFilter = "cn=" + sys.argv[1]

if sys.argv[1] == '-v':
  verbose = True # flip to True
  print("verbose mode: on")
  searchFilter = "cn=" + sys.argv[2]

print("search string:", searchFilter)

#
# function to print results
#

def print_results(ldap_result):
  i = 0
  entries = len(ldap_result)
  while i < entries:
    print("----------------------------------------")
    user = ldap_result[i][1].copy()
    print("Name: ", user['displayName'][0].decode())

    if 'eduPersonNickname' in user.keys():
      print("Nickname(s): ", user['eduPersonNickname'][0].decode())
    else:
      print("Nickname(s): N/A")

    print("Department: ",user['dcDeptclass'][0].decode())

    if 'dcEmployeeDivision' in user.keys():
        print("Division: ",user['dcEmployeeDivision'][0].decode())
    else:
        print("Division: N/A")

    print("Email: ",user['mail'][0].decode())

    if 'telephoneNumber' in user.keys():
        print("Telephone: ", user['telephoneNumber'][0].decode())
    else:
        print("Telephone: N/A")

    if 'eduPersonAffiliation' in user.keys():
      print("Type: ",user['eduPersonAffiliation'][0].decode())
    else:
      print("Type: N/A")

    if 'uid' in user.keys():
      print("NetID: ",user['uid'][0].decode())
    else:
      print("NetID: N/A")


    print("----------------------------------------")
    print
    i += 1

try:
  l = ldap.initialize(ldap_server)
  l.simple_bind_s()

  if verbose:
    print("connecting to server: ",ldap_server)

# error handling
except ldap.LDAPError:
  print("ERROR: could not connect to server:",ldap_server)
  exit()


# retrieve results
try:
  ldap_result = l.search_s(baseDN, searchScope, searchFilter, retrieveAttributes)

  if len(ldap_result) == 0:
    print("No matching entries found.")
    sys.exit()
  else:
    if verbose: 
      print("returned ", str(len(ldap_result))," matches")
    print_results(ldap_result)

# error handling
except ldap.LDAPError:
  print("ERROR: could not retrieve data from server")
